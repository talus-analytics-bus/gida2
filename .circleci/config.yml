version: 2.1

orbs:
  aws-cli: circleci/aws-cli@0.1.13

jobs:
  deploy-prod:
    working_directory: ~/repo

    docker:
      - image: circleci/node:12.16.3-stretch
    environment:
      API_URL: http://gida-tracking-api-dev.us-west-1.elasticbeanstalk.com/

    steps:
      - checkout

      - run:
          name: Installing Deployment Dependencies
          working_directory: /
          command: |
            sudo apt-get -y -qq update
            sudo apt-get install python3-pip python3-dev g++ build-essential
            sudo pip3 install --upgrade setuptools pytz
            sudo pip3 install awsebcli --upgrade

      - aws-cli/install
      - aws-cli/configure

      - run:
          name: Setup environment variables
          command: |
            echo 'export MY_ENV_VAR="FOO"' >> $BASH_ENV

      - run:
          name: "What was my custom environment variable?"
          command: echo ${MY_ENV_VAR}

      - run:
          name: yarn build
          command: rm yarn.lock; yarn install --network-timeout 1000000

      - run:
          name: deploy
          command: yarn run deploy

      - run:
          name: Notify Slack
          command: |
            curl -X POST -H 'Content-type: application/json' --data '{"text":"http://measles-tracker.s3-website-us-west-1.amazonaws.com"}' \
            https://hooks.slack.com/services/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

  deploy-dev:
    working_directory: ~/repo

    docker:
      - image: circleci/node:12.16.3-stretch
    environment:
      API_URL: http://gida-tracking-api-dev.us-west-1.elasticbeanstalk.com/

    steps:
      - checkout

      - run:
          name: Installing Deployment Dependencies
          working_directory: /
          command: |
            sudo apt-get -y -qq update
            sudo apt-get install python3-pip python3-dev g++ build-essential
            sudo pip3 install --upgrade setuptools pytz
            sudo pip3 install awsebcli --upgrade

      - aws-cli/install
      - aws-cli/configure

      - run:
          name: "What was my custom environment variable?"
          command: echo ${MY_ENV_VAR}

      - run:
          name: yarn build:dev
          command: rm yarn.lock; yarn install --network-timeout 1000000

      - run:
          name: deploy
          command: aws s3 sync build/ s3://gida-tracking-dev --acl public-read --delete

      # - run:
      #     name: deploy
      #     command: yarn run deploy-dev

      - run:
          name: cloudfront invalidation
          command: |
            aws cloudfront create-invalidation \
            --distribution-id EYL69FA0BI36W \
            --paths "/*"

  deploy-dev2:
    working_directory: ~/repo

    docker:
      - image: circleci/node:12.16.3-stretch
    environment:
      API_URL: https://ghs-tracking-api.ghscosting.org/

    steps:
      - checkout

      - run:
          name: Installing Deployment Dependencies
          working_directory: /
          command: |
            sudo apt-get -y -qq update
            sudo apt-get install python3-pip python3-dev g++ build-essential
            sudo pip3 install --upgrade setuptools pytz
            sudo pip3 install awsebcli --upgrade

      - aws-cli/install
      - aws-cli/configure

      - run:
          name: yarn build:dev
          command: rm yarn.lock; yarn install --network-timeout 1000000

      - run:
          name: deploy dev2
          command: REACT_APP_METRICS_API_URL=https://metric-api-test.talusanalytics.com && REACT_APP_AMP_METRICS_API_URL=https://metric-api-test.talusanalytics.com && REACT_APP_API_URL=https://ghs-tracking-api.ghscosting.org yarn build && aws s3 sync build/ s3://ghs-tracking  --acl public-read --delete

      - run:
          name: cloudfront invalidation
          command: |
            aws cloudfront create-invalidation \
            --distribution-id E152A1LOQ63YSI \
            --paths "/*"

workflows:
  version: 2
  build:
    jobs:
      - deploy-prod:
          filters:
            branches:
              only:
                - master
      - deploy-dev:
          filters:
            branches:
              only:
                - dev
      - deploy-dev2:
          filters:
            branches:
              only:
                - update-api
